<launch>
  <!-- Generate urdf-model of TurtleBot according to the given base, stack and 3d sensor.  -->
  <arg name="base" default="kobuki"/>
  <arg name="stacks" default="ninja-hexagons"/>
  <arg name="3d_sensor" default="ninja-kinect"/>  
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor)_sim.urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- Spawn the generated turtlebot model. (Spawn process terminates after spawning.)-->
  <arg name="robot_model_name" default="leonardo"/>
  <arg name="init_pose" default="-x 1 -y 1 -z 0"/>
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(arg init_pose) -unpause -urdf -param robot_description -model $(arg robot_model_name)"/>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Robot State Publisher: Responsible for publishing the transformations between the different parts of the robot (TF). -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
</launch>

